import itertools
allS = [30, 32, 1000000]
allA = [0,1]
allG = ['s','a','sa']
priorAffects = [[0,1],[0,0],[0,0]]
sa = list(itertools.product(s,a))
print(sa)

roundCost = 1
sharpCost = 0
digitsOfPrecision = 1

def Round(x):
    return round(x,digitsOfPrecision-len(str(x)))
    
# def L_0(s,a,u):
#     if (s == u):
#         return P_A(a,s)
#     else:
#         return 0

def P_A(a,s):
    return priorAffects[allS.index(s)][a]

def g(s,a):
    return ((s),(a),(s,a))

def L_0(x,u,g):
    cumul = 0
    for s_p, a_p in sa:
        if x == g(s_p, a_p):
            cumul+=L_0(s_p, a_p, u)
    return cumul



def priorStates(possStates, possUtterances): 
    prior = []
    for x in possUtterances:
        for y in possStates:
            prior.append()

    

def cost(u):
    if u%10 == 0:
        return roundCost
    return sharpCost
